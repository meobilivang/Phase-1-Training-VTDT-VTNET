+ docker build -t pnguyen01/simple-to-do-nodejs-app:1.41 .
Sending build context to Docker daemon  519.2kB

Step 1/7 : FROM node:lts
 ---> 9153ee3e2ced
Step 2/7 : WORKDIR /usr/src/app
 ---> Using cache
 ---> a15134f4644d
Step 3/7 : COPY package*.json ./
 ---> Using cache
 ---> 49f32decbb18
Step 4/7 : RUN npm install
 ---> Using cache
 ---> 71a6f34822b5
Step 5/7 : COPY . .
 ---> 83e51a8d6dcd
Step 6/7 : EXPOSE 3400
 ---> Running in af217f701072
Removing intermediate container af217f701072
 ---> 4c6b3632ce39
Step 7/7 : CMD [ "node", "server.js" ]
 ---> Running in 878a8ee9dd2a
Removing intermediate container 878a8ee9dd2a
 ---> f93dd8cad25b
Successfully built f93dd8cad25b
Successfully tagged pnguyen01/simple-to-do-nodejs-app:1.41
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push Image to DockerHub)
[Pipeline] script
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withDockerRegistry
$ docker exec --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** --env ******** ******************** docker login -u pnguyen01 -p ******** https://index.docker.io/v1/

Login Succeeded
[Pipeline] {
[Pipeline] isUnix
[Pipeline] sh
+ docker tag pnguyen01/simple-to-do-nodejs-app:1.41 pnguyen01/simple-to-do-nodejs-app:1.41
[Pipeline] isUnix
[Pipeline] sh
+ docker push pnguyen01/simple-to-do-nodejs-app:1.41
The push refers to repository [docker.io/pnguyen01/simple-to-do-nodejs-app]
020b802e3ae5: Preparing
0c46acf3eacd: Preparing
59a0a9c1f408: Preparing
d91648fbd134: Preparing
b238f928d38b: Preparing
4a844761bb65: Preparing
b1501adb3037: Preparing
b257e69d416f: Preparing
1e9c28d06610: Preparing
cddb98d77163: Preparing
ed0a3d9cbcc7: Preparing
8c8e652ecd8f: Preparing
2f4ee6a2e1b5: Preparing
ed0a3d9cbcc7: Waiting
8c8e652ecd8f: Waiting
2f4ee6a2e1b5: Waiting
4a844761bb65: Waiting
b1501adb3037: Waiting
b257e69d416f: Waiting
1e9c28d06610: Waiting
cddb98d77163: Waiting
b238f928d38b: Layer already exists
4a844761bb65: Layer already exists
b1501adb3037: Layer already exists
b257e69d416f: Layer already exists
d91648fbd134: Pushed
59a0a9c1f408: Pushed
1e9c28d06610: Layer already exists
020b802e3ae5: Pushed
cddb98d77163: Layer already exists
ed0a3d9cbcc7: Layer already exists
8c8e652ecd8f: Layer already exists
2f4ee6a2e1b5: Layer already exists
0c46acf3eacd: Pushed
1.41: digest: sha256:1c97fc6023d5aea35e48d16ff53e26ba26c3f673111ab04a3aa0065bb3fdb051 size: 3053
[Pipeline] }
[Pipeline] // withDockerRegistry
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
$ docker stop --time=1 2bdcd92e8c4d541ea918e80c41b19544c66f28ba88d170d0bc19390496a9de3f
$ docker rm -f 2bdcd92e8c4d541ea918e80c41b19544c66f28ba88d170d0bc19390496a9de3f
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS




----------------


+ ./jenkins/scripts/deploy.sh
--------------------------------------------------------------------
						     			  
VI. Phase Six
						     			  
=============DEPLOYING TO-DO APPLICATION TO REMOTE HOST=============
						     			  
						     			  
--------------------------------------------------------------------
						     
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 319e796671976d9031bd56b8617f98ff239c2a36 # timeout=10
[DEPRECATION WARNING]: The TRANSFORM_INVALID_GROUP_CHARS settings is set to 
allow bad characters in group names by default, this will change, but still be 
user configurable on deprecation. This feature will be removed in version 2.10.
 Deprecation warnings can be disabled by setting deprecation_warnings=False in 
ansible.cfg.
[WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details
PLAY [Install To-Do App on a remote Host] **************************************

TASK [common : Ping Deployment Node] *******************************************
ok: [192.168.80.133]

TASK [common : Show ping result] ***********************************************
ok: [192.168.80.133] => {
    "ping_result": {
        "ansible_facts": {
            "discovered_interpreter_python": "/usr/bin/python3"
        },
        "changed": false,
        "failed": false,
        "ping": "pong"
    }
}

TASK [common : Update apt] *****************************************************
ok: [192.168.80.133]

TASK [common : Install essentials packages] ************************************
ok: [192.168.80.133]

TASK [common : Set vim as default editor] **************************************
ok: [192.168.80.133]

TASK [common : Install Docker & Docker SDK] ************************************
ok: [192.168.80.133]

TASK [common : Ensure Docker is running] ***************************************
ok: [192.168.80.133]

TASK [common : Allow access to specific ports] *********************************
ok: [192.168.80.133] => (item=3400)

TASK [docker : Create "to-do-app-net" network] *********************************
ok: [192.168.80.133]

TASK [docker : Start To-Do-App container] **************************************
[DEPRECATION WARNING]: Please note that docker_container handles networks 
slightly different than docker CLI. If you specify networks, the default 
network will still be attached as the first network. (You can specify 
purge_networks to remove all networks not explicitly listed.) This behavior 
will change in Ansible 2.12. You can change the behavior now by setting the new
 `networks_cli_compatible` option to `yes`, and remove this warning by setting 
it to `no`. This feature will be removed in version 2.12. Deprecation warnings 
can be disabled by setting deprecation_warnings=False in ansible.cfg.
changed: [192.168.80.133]

PLAY RECAP *********************************************************************
192.168.80.133             : ok=10   changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

---------------------------------------------
						     			  
						     			  
						     			  
=============DEPLOYMENT COMPLETED=============
						     			  
						     			  
---------------------------------------------
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] End of Pipeline
Finished: SUCCESS


--------------------

+ ./jenkins/scripts/deploy.sh
--------------------------------------------------------------------
						     			  
VI. Phase Six
						     			  
=============DEPLOYING TO-DO APPLICATION TO REMOTE HOST=============
						     			  
						     			  
--------------------------------------------------------------------
						     
 > git config core.sparsecheckout # timeout=10
 > git checkout -f afce22bc1ff179bc7a9b69ac0d276c785d69062a # timeout=10
[DEPRECATION WARNING]: The TRANSFORM_INVALID_GROUP_CHARS settings is set to 
allow bad characters in group names by default, this will change, but still be 
user configurable on deprecation. This feature will be removed in version 2.10.
 Deprecation warnings can be disabled by setting deprecation_warnings=False in 
ansible.cfg.
[WARNING]: Invalid characters were found in group names but not replaced, use
-vvvv to see details
PLAY [Install To-Do App on a remote Host] **************************************

TASK [common : Ping Deployment Node] *******************************************
ok: [192.168.80.164]

TASK [common : Show ping result] ***********************************************
ok: [192.168.80.164] => {
    "ping_result": {
        "ansible_facts": {
            "discovered_interpreter_python": "/usr/bin/python3"
        },
        "changed": false,
        "failed": false,
        "ping": "pong"
    }
}

TASK [common : Update apt] *****************************************************
changed: [192.168.80.164]

TASK [common : Install essentials packages] ************************************
changed: [192.168.80.164]

TASK [common : Set vim as default editor] **************************************
changed: [192.168.80.164]

TASK [common : Install Docker & Docker SDK] ************************************
changed: [192.168.80.164]

TASK [common : Ensure Docker is running] ***************************************
ok: [192.168.80.164]

TASK [common : Allow access to specific ports] *********************************
changed: [192.168.80.164] => (item=3400)

TASK [docker : Create "to-do-app-net" network] *********************************
changed: [192.168.80.164]

TASK [docker : Start To-Do-App container] **************************************
[DEPRECATION WARNING]: Please note that docker_container handles networks 
slightly different than docker CLI. If you specify networks, the default 
network will still be attached as the first network. (You can specify 
purge_networks to remove all networks not explicitly listed.) This behavior 
will change in Ansible 2.12. You can change the behavior now by setting the new
 `networks_cli_compatible` option to `yes`, and remove this warning by setting 
it to `no`. This feature will be removed in version 2.12. Deprecation warnings 
can be disabled by setting deprecation_warnings=False in ansible.cfg.
changed: [192.168.80.164]

PLAY RECAP *********************************************************************
192.168.80.164             : ok=10   changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

---------------------------------------------
						     			  
						     			  
						     			  
=============DEPLOYMENT COMPLETED=============
						     			  
						     			  
---------------------------------------------
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] End of Pipeline
Finished: SUCCESS